steps:
  # Run tests and save to file
  - name: golang:1.18
    entrypoint: /bin/bash
    args:
      - -c
      - |
        go get github.com/jstemmer/go-junit-report
        go install github.com/jstemmer/go-junit-report
        2>&1 go test -timeout 1m -v ./... | tee sponge.log
        /go/bin/go-junit-report -set-exit-code < sponge.log > ${SHORT_SHA}_test_log.xml

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t',
          'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$SHORT_SHA', '.']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$SHORT_SHA']

    # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '$_IMAGE_NAME-${SHORT_SHA}',
          '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$SHORT_SHA',
          '--region', 'us-central1', '--platform', 'managed']
  
# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://$_BUCKET_NAME/
    paths:
      - ${SHORT_SHA}_test_log.xml


substitutions:
    _BUCKET_NAME: go-test-result
    _REPO_NAME: video-demo # default value
    _IMAGE_NAME: video-server-demo # default value


# Store images in Google Artifact Registry
# https://cloud.google.com/build/docs/building/build-containers?hl=ja
images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$SHORT_SHA